-- @nsURI UmlMM=http://www.eclipse.org/uml2/4.0.0/UML
-- @nsURI NegocioMM=http://negocio/1.0
  

module negocio2uml;
create umlModel: UmlMM from negocioModel: NegocioMM;

unique lazy rule PrimitivePkg{
	from
		void: OclAny
	to
		primitivePackage: UmlMM!Package (
			name <- 'primitives'
		)
}

unique lazy rule DoublePrim{
	from
		void: OclAny
	to
		doublePrim: UmlMM!PrimitiveType (
			name <- 'double',
			package <- thisModule -> PrimitivePkg()
		)
}

unique lazy rule DatePrim{
	from
		void: OclAny
	to
		datePrim: UmlMM!PrimitiveType (
			name <- 'date',
			package <- thisModule -> PrimitivePkg()
		)
}

unique lazy rule StringPrim{
	from
		void: OclAny
	to
		stringPrim: UmlMM!PrimitiveType (
			name <- 'string',
			package <- thisModule -> PrimitivePkg()
		)
}

unique lazy rule IntegerPrim{
	from
		void: OclAny
	to
		integerPrim: UmlMM!PrimitiveType (
			name <- 'integer',
			package <- thisModule -> PrimitivePkg()
		)
}

unique lazy rule NegocioPkg{
	from
		n: NegocioMM!Negocio
	to
		nPkg: UmlMM!Model (
			name <- n.nombre.toLower()
		)
}

rule Negocio2Class {
	from
		n: NegocioMM!Negocio
	to
		umlNegocioClass: UmlMM!Class (
			name <- n.nombre,
			package <- thisModule -> NegocioPkg(n),
			ownedOperation <- n.personas -> collect(p | thisModule -> AgregarPersona(p))			
		)
}

lazy rule AgregarPersona {
	from
		p: NegocioMM!Persona
	to
		agregarOperation: UmlMM!Operation (
			name <- 'agregar' + p.nombre,
			ownedParameter <- Sequence{personaParameter}
		),
		personaParameter: UmlMM!Parameter(
			name <- 'p',
			type <- p,
			direction <- 'in'
		)
}

rule Persona2Class {
	from
		nPersona: NegocioMM!Persona
	to
		umlClassPersona: UmlMM!Class (
			name <- nPersona.nombre,
			package <- thisModule -> NegocioPkg(nPersona.negocio)
		),
		umlPropertyNegocio: UmlMM!Property (
			name <- nPersona.negocio.nombre.toLower(),
			type <- nPersona.negocio,
			upper <- 1,
			lower <- 1,
			association <- umlAssociationPersonas
		),
		umlPropertyPersona: UmlMM!Property (
			name <- nPersona.nombre.toLower() + 's',
			type <- nPersona,
			upper <- -1,
			lower <- 0,
			aggregation <- #composite,
			association <- umlAssociationPersonas
		),
		umlAssociationPersonas: UmlMM!Association (
			package <- thisModule -> NegocioPkg(nPersona.negocio),
			name <- nPersona.negocio.nombre.toLower() + '_' + nPersona.nombre.toLower() +
					's',
			navigableOwnedEnd <- Sequence{umlPropertyNegocio,
						umlPropertyPersona}
		)
}

rule Producto2Class {
	from
		nProducto: NegocioMM!Producto
	to
		umlClassProducto: UmlMM!Class (
			name <- nProducto.nombre,
			package <- thisModule -> NegocioPkg(nProducto.negocio),
			ownedAttribute <- Sequence{umlPropertyDescripcion,
						umlPropertyPrecio,
						umlPropertyStock,
						umlPropertyStockMin}
		),
		umlPropertyDescripcion: UmlMM!Property (
			name <- 'descripcion',
			type <- thisModule -> StringPrim(),
			upper <- 1,
			lower <- 1
		),
		umlPropertyPrecio: UmlMM!Property (
			name <- 'precio',
			type <- thisModule -> DoublePrim(),
			upper <- 1,
			lower <- 1
		),
		umlPropertyStock: UmlMM!Property (
			name <- 'stock',
			type <- thisModule -> IntegerPrim(),
			upper <- 1,
			lower <- 1
		),
		umlPropertyStockMin: UmlMM!Property (
			name <- 'stockMin',
			type <- thisModule -> IntegerPrim(),
			upper <- 1,
			lower <- 1
		)
}
